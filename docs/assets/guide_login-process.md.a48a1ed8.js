import{_ as s,o,c as a,Q as n}from"./chunks/framework.fb0c8ff2.js";const d=JSON.parse('{"title":"Login Process","description":"","frontmatter":{},"headers":[],"relativePath":"guide/login-process.md","filePath":"guide/login-process.md","lastUpdated":1691359444000}'),e={name:"guide/login-process.md"},l=n(`<h1 id="login-process" tabindex="-1">Login Process <a class="header-anchor" href="#login-process" aria-label="Permalink to &quot;Login Process&quot;">â€‹</a></h1><p><strong>All methods except the login method in the application work with the <a href="/guide/authentication-token"><code>Token</code></a> parameter.</strong></p><ul><li>In case of calling methods with an invalid token, the methods return the following JSON object:</li></ul><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">FAIL</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Error during processing Token and Login : Invalid Token</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>If the application receives an error, the methods return error messages such as the following:</li></ul><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">FAIL</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OnlineChargeAutomationBR0003 : NOT authorized for : SKT/4 !</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,6),t=[l];function p(c,r,i,D,F,y){return o(),a("div",null,t)}const h=s(e,[["render",p]]);export{d as __pageData,h as default};
