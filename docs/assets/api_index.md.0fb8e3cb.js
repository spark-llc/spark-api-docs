import{_ as s,o as a,c as o,Q as e}from"./chunks/framework.fb0c8ff2.js";const F=JSON.parse('{"title":"@semantic-api/api","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md","lastUpdated":1691359444000}'),n={name:"api/index.md"},l=e(`<h1 id="semantic-api-api" tabindex="-1"><code>@semantic-api/api</code> <a class="header-anchor" href="#semantic-api-api" aria-label="Permalink to &quot;\`@semantic-api/api\`&quot;">​</a></h1><h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-label="Permalink to &quot;Types&quot;">​</a></h2><ul><li><a href="/api/api-config"><code>ApiConfig</code></a></li><li><a href="/api/description"><code>Description</code></a></li><li><a href="/api/algorithm"><code>Algorithm</code></a></li><li><a href="/api/collection"><code>Collection</code></a></li><li><a href="/api/context"><code>Context</code></a></li><li><a href="/api/context-options"><code>ContextOptions</code></a></li></ul><h2 id="global-api" tabindex="-1">Global API <a class="header-anchor" href="#global-api" aria-label="Permalink to &quot;Global API&quot;">​</a></h2><ul><li><a href="./"><code>createModel</code></a></li><li><a href="./"><code>createContext</code></a></li><li><a href="./"><code>defineAliasDescription</code></a></li><li><a href="./"><code>defineDescription</code></a></li><li><a href="./"><code>useFunctions</code></a></li></ul><h2 id="advanced-api" tabindex="-1">Advanced API <a class="header-anchor" href="#advanced-api" aria-label="Permalink to &quot;Advanced API&quot;">​</a></h2><p>You shouldn&#39;t be using these unless you really know what you&#39;re doing.</p><ul><li><a href="./"><code>connectToDatabase</code></a></li><li><a href="./"><code>getAccessControl</code></a></li><li><a href="./"><code>getResources</code></a></li><li><a href="./"><code>getResourceAsset</code></a></li><li><a href="./"><code>getFunction</code></a></li></ul><h2 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h2><p>Please head to <a href="/api/description"><code>Description</code></a>.</p><h2 id="algorithm" tabindex="-1">Algorithm <a class="header-anchor" href="#algorithm" aria-label="Permalink to &quot;Algorithm&quot;">​</a></h2><p>Please head to <a href="/api/algorithm"><code>Algorithm</code></a>.</p><h2 id="collection" tabindex="-1">Collection <a class="header-anchor" href="#collection" aria-label="Permalink to &quot;Collection&quot;">​</a></h2><p>Please head to <a href="/api/collection"><code>Collection</code></a>.</p><h2 id="context" tabindex="-1">Context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;Context&quot;">​</a></h2><p>A context is an object that is passed down to the endpoint functions. It contains shorthands for acessing the Model (if the resource is a collection), description, session Token, strongely typed references to another collections and algorithms, and more. To create a context use the helper <a href="#create-context"><code>createContext</code></a>.</p><p>It also provides the following shorthand functions:</p><ul><li><code>log</code></li></ul><p>Used to log an entry to the database with the system collection <code>Log</code>. For detailed usage head to <a href="/guide/logging"><code>Logging</code></a> section.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> log</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">message</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">details</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Log</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li><code>validate</code></li></ul><p>Validates an object against a JSON Schema. For detailed usage head to <a href="/guide/validation"><code>Validation</code></a> section.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> validate</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#A6ACCD;font-style:italic;">description</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Omit</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Description</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">$id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#A6ACCD;font-style:italic;">what</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#A6ACCD;font-style:italic;">required</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">keyof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">T</span><span style="color:#A6ACCD;">)[] </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">undefined</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ReturnType</span><span style="color:#89DDFF;">&lt;typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@semantic-api/api</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">validateFromDescription</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li><code>limitRate</code></li></ul><p>Validates an object against a JSON Schema. For detailed usage head to <a href="/guide/rate-limiting"><code>Rate limiting</code></a> section.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> limitRate</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">params</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">RateLimitingParams</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">ReturnType</span><span style="color:#89DDFF;">&lt;typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@semantic-api/api</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">limitRate</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="contextoptions" tabindex="-1">ContextOptions <a class="header-anchor" href="#contextoptions" aria-label="Permalink to &quot;ContextOptions&quot;">​</a></h2><p>Options object used to create a Context.</p><h2 id="createcontext" tabindex="-1">createContext <a class="header-anchor" href="#createcontext" aria-label="Permalink to &quot;createContext&quot;">​</a></h2><p>Creates a context given its options.</p><ul><li><code>apiConfig</code>: set by the server</li><li><code>parentContext</code>: if you are creating the context manually from another function that already has it&#39;s context, then you may set this prop to merge the old context into the new one</li><li><code>resourceType</code>: defaults to <code>collection</code></li><li><code>resourceName</code>: the collection/algorithm name, used to resolve it&#39;s dependencies</li></ul><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> createContext</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">TDescription</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Description</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">TCollections</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Collections</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">TAlgorithms</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Algorithms</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;(</span><span style="color:#A6ACCD;font-style:italic;">options</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ContextOptions</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">TCollections</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TAlgorithms</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Context</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">TDescription</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TCollections</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TAlgorithms</span><span style="color:#89DDFF;">&gt;&gt;</span></span></code></pre></div>`,32),t=[l];function p(c,r,i,C,d,y){return a(),o("div",null,t)}const A=s(n,[["render",p]]);export{F as __pageData,A as default};
