import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.fb0c8ff2.js";const A=JSON.parse('{"title":"@semantic-api/access-control","description":"","frontmatter":{},"headers":[],"relativePath":"access-control/index.md","filePath":"access-control/index.md","lastUpdated":1691359444000}'),o={name:"access-control/index.md"},e=l(`<h1 id="semantic-api-access-control" tabindex="-1"><code>@semantic-api/access-control</code> <a class="header-anchor" href="#semantic-api-access-control" aria-label="Permalink to &quot;\`@semantic-api/access-control\`&quot;">​</a></h1><h2 id="types" tabindex="-1">Types <a class="header-anchor" href="#types" aria-label="Permalink to &quot;Types&quot;">​</a></h2><ul><li><a href="#role"><code>Role</code></a></li><li><a href="#access-control"><code>AccessControl</code></a></li><li><a href="#access-control-layer"><code>AccessControlLayer</code></a></li><li><a href="#valid-access-control-layer"><code>ValidAccessControlLayer</code></a></li></ul><h2 id="global-api" tabindex="-1">Global API <a class="header-anchor" href="#global-api" aria-label="Permalink to &quot;Global API&quot;">​</a></h2><ul><li><a href="#define-access-control"><code>defineAccessControl</code></a></li></ul><h2 id="role" tabindex="-1">Role <a class="header-anchor" href="#role" aria-label="Permalink to &quot;Role&quot;">​</a></h2><h2 id="accesscontrol" tabindex="-1">AccessControl <a class="header-anchor" href="#accesscontrol" aria-label="Permalink to &quot;AccessControl&quot;">​</a></h2><h2 id="accesscontrollayer" tabindex="-1">AccessControlLayer <a class="header-anchor" href="#accesscontrollayer" aria-label="Permalink to &quot;AccessControlLayer&quot;">​</a></h2><h2 id="validaccesscontrollayer" tabindex="-1">ValidAccessControlLayer <a class="header-anchor" href="#validaccesscontrollayer" aria-label="Permalink to &quot;ValidAccessControlLayer&quot;">​</a></h2><h2 id="defineaccesscontrol" tabindex="-1">defineAccessControl <a class="header-anchor" href="#defineaccesscontrol" aria-label="Permalink to &quot;defineAccessControl&quot;">​</a></h2><p>Defines a <code>AccessControl</code> object while providing strong typing.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineAccessControl</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@semantic-api/access-control</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> accessControl </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineAccessControl</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Collections</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Algorithms</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">()(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">roles</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">guest</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">inherit</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">unauthenticated</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// will produce TS diagnostics since there&#39;s no &#39;non_existent&#39; role to inherit</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// &#39;non_existent&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">      ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">capabilities</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">someResource</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">grantEverything</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">read</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">context</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">payload</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// will produce TS diagnostics since &#39;non_existent&#39; role wasn&#39;t provided</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// if( context.token.user.roles.includes(&#39;non_existent&#39;) ) {</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//   context.log(&#39;oh no!&#39;)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// }</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>`,13),c=[e];function p(t,r,i,y,D,F){return a(),n("div",null,c)}const d=s(o,[["render",p]]);export{A as __pageData,d as default};
